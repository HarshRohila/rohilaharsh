/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Email } from "./email/service";
import { IconDefinition } from "@fortawesome/free-solid-svg-icons";
import { IconDefinition as IconDefinition1 } from "@fortawesome/fontawesome-svg-core";
export namespace Components {
    interface AppFeatures {
    }
    interface AppHeader {
    }
    interface AppHome {
        "emails": Email[];
    }
    interface AppProfile {
        "name": string;
    }
    interface AppRoot {
    }
    interface CheckBox {
        "value": boolean;
    }
    interface EmailBar {
        "email": Email;
    }
    interface EmailList {
        "emails": Email[];
    }
    interface GcaEmailPage {
        "emailId": string;
    }
    interface GcaMobileSideBar {
    }
    interface GcaStarredEmails {
        "starredEmails": Email[];
    }
    interface IconButton {
        "icon": IconDefinition;
    }
    interface SideBar {
    }
    interface StarCheckbox {
        "value": boolean;
    }
    interface TodoApp {
    }
    interface XIcon {
        "icon": IconDefinition;
        "mask"?: IconDefinition;
        "size"?: string;
        "spin": boolean;
    }
}
declare global {
    interface HTMLAppFeaturesElement extends Components.AppFeatures, HTMLStencilElement {
    }
    var HTMLAppFeaturesElement: {
        prototype: HTMLAppFeaturesElement;
        new (): HTMLAppFeaturesElement;
    };
    interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {
    }
    var HTMLAppHeaderElement: {
        prototype: HTMLAppHeaderElement;
        new (): HTMLAppHeaderElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLCheckBoxElement extends Components.CheckBox, HTMLStencilElement {
    }
    var HTMLCheckBoxElement: {
        prototype: HTMLCheckBoxElement;
        new (): HTMLCheckBoxElement;
    };
    interface HTMLEmailBarElement extends Components.EmailBar, HTMLStencilElement {
    }
    var HTMLEmailBarElement: {
        prototype: HTMLEmailBarElement;
        new (): HTMLEmailBarElement;
    };
    interface HTMLEmailListElement extends Components.EmailList, HTMLStencilElement {
    }
    var HTMLEmailListElement: {
        prototype: HTMLEmailListElement;
        new (): HTMLEmailListElement;
    };
    interface HTMLGcaEmailPageElement extends Components.GcaEmailPage, HTMLStencilElement {
    }
    var HTMLGcaEmailPageElement: {
        prototype: HTMLGcaEmailPageElement;
        new (): HTMLGcaEmailPageElement;
    };
    interface HTMLGcaMobileSideBarElement extends Components.GcaMobileSideBar, HTMLStencilElement {
    }
    var HTMLGcaMobileSideBarElement: {
        prototype: HTMLGcaMobileSideBarElement;
        new (): HTMLGcaMobileSideBarElement;
    };
    interface HTMLGcaStarredEmailsElement extends Components.GcaStarredEmails, HTMLStencilElement {
    }
    var HTMLGcaStarredEmailsElement: {
        prototype: HTMLGcaStarredEmailsElement;
        new (): HTMLGcaStarredEmailsElement;
    };
    interface HTMLIconButtonElement extends Components.IconButton, HTMLStencilElement {
    }
    var HTMLIconButtonElement: {
        prototype: HTMLIconButtonElement;
        new (): HTMLIconButtonElement;
    };
    interface HTMLSideBarElement extends Components.SideBar, HTMLStencilElement {
    }
    var HTMLSideBarElement: {
        prototype: HTMLSideBarElement;
        new (): HTMLSideBarElement;
    };
    interface HTMLStarCheckboxElement extends Components.StarCheckbox, HTMLStencilElement {
    }
    var HTMLStarCheckboxElement: {
        prototype: HTMLStarCheckboxElement;
        new (): HTMLStarCheckboxElement;
    };
    interface HTMLTodoAppElement extends Components.TodoApp, HTMLStencilElement {
    }
    var HTMLTodoAppElement: {
        prototype: HTMLTodoAppElement;
        new (): HTMLTodoAppElement;
    };
    interface HTMLXIconElement extends Components.XIcon, HTMLStencilElement {
    }
    var HTMLXIconElement: {
        prototype: HTMLXIconElement;
        new (): HTMLXIconElement;
    };
    interface HTMLElementTagNameMap {
        "app-features": HTMLAppFeaturesElement;
        "app-header": HTMLAppHeaderElement;
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "check-box": HTMLCheckBoxElement;
        "email-bar": HTMLEmailBarElement;
        "email-list": HTMLEmailListElement;
        "gca-email-page": HTMLGcaEmailPageElement;
        "gca-mobile-side-bar": HTMLGcaMobileSideBarElement;
        "gca-starred-emails": HTMLGcaStarredEmailsElement;
        "icon-button": HTMLIconButtonElement;
        "side-bar": HTMLSideBarElement;
        "star-checkbox": HTMLStarCheckboxElement;
        "todo-app": HTMLTodoAppElement;
        "x-icon": HTMLXIconElement;
    }
}
declare namespace LocalJSX {
    interface AppFeatures {
    }
    interface AppHeader {
        "onDeleteClicked"?: (event: CustomEvent<Set<string>>) => void;
    }
    interface AppHome {
        "emails"?: Email[];
        "onWillLoadCalled"?: (event: CustomEvent<void>) => void;
    }
    interface AppProfile {
        "name"?: string;
    }
    interface AppRoot {
    }
    interface CheckBox {
        "value"?: boolean;
    }
    interface EmailBar {
        "email"?: Email;
        "onDelete"?: (event: CustomEvent<Email>) => void;
    }
    interface EmailList {
        "emails"?: Email[];
    }
    interface GcaEmailPage {
        "emailId"?: string;
    }
    interface GcaMobileSideBar {
        "onClickedOutside"?: (event: CustomEvent<void>) => void;
    }
    interface GcaStarredEmails {
        "onChangedStarredEmails"?: (event: CustomEvent<Email[]>) => void;
        "starredEmails"?: Email[];
    }
    interface IconButton {
        "icon"?: IconDefinition;
        "onClicked"?: (event: CustomEvent<void>) => void;
    }
    interface SideBar {
    }
    interface StarCheckbox {
        "onToggled"?: (event: CustomEvent<boolean>) => void;
        "value"?: boolean;
    }
    interface TodoApp {
    }
    interface XIcon {
        "icon"?: IconDefinition;
        "mask"?: IconDefinition;
        "size"?: string;
        "spin"?: boolean;
    }
    interface IntrinsicElements {
        "app-features": AppFeatures;
        "app-header": AppHeader;
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "check-box": CheckBox;
        "email-bar": EmailBar;
        "email-list": EmailList;
        "gca-email-page": GcaEmailPage;
        "gca-mobile-side-bar": GcaMobileSideBar;
        "gca-starred-emails": GcaStarredEmails;
        "icon-button": IconButton;
        "side-bar": SideBar;
        "star-checkbox": StarCheckbox;
        "todo-app": TodoApp;
        "x-icon": XIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-features": LocalJSX.AppFeatures & JSXBase.HTMLAttributes<HTMLAppFeaturesElement>;
            "app-header": LocalJSX.AppHeader & JSXBase.HTMLAttributes<HTMLAppHeaderElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "check-box": LocalJSX.CheckBox & JSXBase.HTMLAttributes<HTMLCheckBoxElement>;
            "email-bar": LocalJSX.EmailBar & JSXBase.HTMLAttributes<HTMLEmailBarElement>;
            "email-list": LocalJSX.EmailList & JSXBase.HTMLAttributes<HTMLEmailListElement>;
            "gca-email-page": LocalJSX.GcaEmailPage & JSXBase.HTMLAttributes<HTMLGcaEmailPageElement>;
            "gca-mobile-side-bar": LocalJSX.GcaMobileSideBar & JSXBase.HTMLAttributes<HTMLGcaMobileSideBarElement>;
            "gca-starred-emails": LocalJSX.GcaStarredEmails & JSXBase.HTMLAttributes<HTMLGcaStarredEmailsElement>;
            "icon-button": LocalJSX.IconButton & JSXBase.HTMLAttributes<HTMLIconButtonElement>;
            "side-bar": LocalJSX.SideBar & JSXBase.HTMLAttributes<HTMLSideBarElement>;
            "star-checkbox": LocalJSX.StarCheckbox & JSXBase.HTMLAttributes<HTMLStarCheckboxElement>;
            "todo-app": LocalJSX.TodoApp & JSXBase.HTMLAttributes<HTMLTodoAppElement>;
            "x-icon": LocalJSX.XIcon & JSXBase.HTMLAttributes<HTMLXIconElement>;
        }
    }
}
